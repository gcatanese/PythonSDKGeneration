# coding: utf-8

"""
    Management API

    Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to version 1 of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v1/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v1 ```  # noqa: E501

    The version of the OpenAPI document: 1
    Contact: developer-experience@adyen.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.billing_entities_response import BillingEntitiesResponse  # noqa: E501
from openapi_client.rest import ApiException

class TestBillingEntitiesResponse(unittest.TestCase):
    """BillingEntitiesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test BillingEntitiesResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BillingEntitiesResponse`
        """
        model = openapi_client.models.billing_entities_response.BillingEntitiesResponse()  # noqa: E501
        if include_optional :
            return BillingEntitiesResponse(
                data = [
                    openapi_client.models.billing_entity.BillingEntity(
                        address = openapi_client.models.address.Address(
                            city = '', 
                            company_name = '', 
                            country = '', 
                            postal_code = '', 
                            state_or_province = '', 
                            street_address = '', 
                            street_address2 = '', ), 
                        email = '', 
                        id = '', 
                        name = '', 
                        tax_id = '', )
                    ]
            )
        else :
            return BillingEntitiesResponse(
        )
        """

    def testBillingEntitiesResponse(self):
        """Test BillingEntitiesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
