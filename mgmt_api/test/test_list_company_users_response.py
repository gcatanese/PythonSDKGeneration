# coding: utf-8

"""
    Management API

    Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to version 1 of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v1/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v1 ```  # noqa: E501

    The version of the OpenAPI document: 1
    Contact: developer-experience@adyen.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.list_company_users_response import ListCompanyUsersResponse  # noqa: E501
from openapi_client.rest import ApiException

class TestListCompanyUsersResponse(unittest.TestCase):
    """ListCompanyUsersResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ListCompanyUsersResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListCompanyUsersResponse`
        """
        model = openapi_client.models.list_company_users_response.ListCompanyUsersResponse()  # noqa: E501
        if include_optional :
            return ListCompanyUsersResponse(
                links = openapi_client.models.pagination_links.PaginationLinks(
                    first = openapi_client.models.links_element.LinksElement(
                        href = '', ), 
                    last = openapi_client.models.links_element.LinksElement(
                        href = '', ), 
                    next = , 
                    prev = , 
                    self = , ), 
                data = [
                    openapi_client.models.company_user.CompanyUser(
                        _links = openapi_client.models.links.Links(
                            self = openapi_client.models.links_element.LinksElement(
                                href = '', ), ), 
                        account_groups = [
                            ''
                            ], 
                        active = True, 
                        associated_merchant_accounts = [
                            ''
                            ], 
                        email = '', 
                        id = '', 
                        name = openapi_client.models.name.Name(
                            first_name = '', 
                            last_name = '', ), 
                        roles = [
                            ''
                            ], 
                        time_zone_code = '', 
                        username = '0', )
                    ], 
                items_total = 56, 
                pages_total = 56
            )
        else :
            return ListCompanyUsersResponse(
                items_total = 56,
                pages_total = 56,
        )
        """

    def testListCompanyUsersResponse(self):
        """Test ListCompanyUsersResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
